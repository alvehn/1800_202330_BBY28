
// //----------------------------------------------------------
// // This function is the only function that's called.
// // This strategy gives us better control of the page.
// //----------------------------------------------------------

var currentUser;

function doAll() {
  firebase.auth().onAuthStateChanged(user => {
    if (user) {
      currentUser = db.collection("users").doc(user.uid);
      insertNameFromFirestore(user);
      getFavourites(user)
    } else {
      console.log("No user is signed in");
    }
  });
}
doAll();


//----------------------------------------------------------
// Wouldn't it be nice to see the User's Name on this page?
// Let's do it!  (Thinking ahead:  This function can be carved out, 
// and put into script.js for other pages to use as well).
//----------------------------------------------------------//----------------------------------------------------------
function insertNameFromFirestore(user) {
  db.collection("users").doc(user.uid).get().then(userDoc => {
    userName = userDoc.data().name;
    document.getElementById('name-goes-here').innerHTML = userName;
  })

}



//----------------------------------------------------------
// This function takes input param User's Firestore document pointer
// and retrieves the "saved" array (of bookmarks) 
// and dynamically displays them in the gallery
//----------------------------------------------------------
function getFavourites(user) {
  db.collection("users").doc(user.uid).get()
    .then(userDoc => {

      // Get the Array of bookmarks
      var favourites = userDoc.data().favourites;

      // Get pointer the new card template
      let newCardTemplate = document.getElementById("savedCardTemplate");
      let i = 0;
      // Iterate through the ARRAY of bookmarked hikes (document ID's)
      favourites.forEach(thisEventID => {
        db.collection("events").doc(thisEventID).get().then(doc => {
          var title = doc.data().name; // get value of the "name" key
          // var description = doc.data().description;
          var date = doc.data().date;             //get value of "date"
          var location = doc.data().location;     //gets value of "location"
          var tags = doc.data().tags;
          var coordinates = doc.data().coordinates;
          var time = doc.data().time;
          var image = doc.data().image;

          var docID = doc.id;  //this is the autogenerated ID of the document

          //clone the new card
          // let newcard = neweventTemplate.content.cloneNode(true);
          let newcard = newCardTemplate.content.cloneNode(true); // Clone the HTML template to create a new card (newcard) that will be filled with Firestore data.
          //update title and some pertinant information
          newcard.querySelector('.card-title').innerHTML = title;
          newcard.querySelector('.card-date').innerHTML = date + " " + time;
          newcard.querySelector('.card-location').innerHTML = location;
          newcard.querySelector('.card-coordinates').innerHTML = coordinates;
          newcard.querySelector('.card-tags').innerHTML = tags;
          newcard.querySelector('.card-image').src = image;

          newcard.querySelector('a').href = "event.html?docID=" + docID;//button/read more
          newcard.querySelector('i').id = 'save-' + docID;   //guaranteed to be unique
          newcard.querySelector('i').onclick = () => updateFavourites(docID);

          currentUser.get().then(userDoc => {
            let favourites = userDoc.data().favourites;
            if (favourites.includes(docID)) {
              document.getElementById('save-' + docID).className = 'bi-heart-fill';
            } else {
              document.getElementById('save-' + docID).className = 'bi-heart';
            }
          })
          //Finally, attach this new card to the gallery

          //fix

          
          let eventCard = document.getElementById("events-go-here");
          eventCard.appendChild(newcard);

          //fixes bug where it would not display events happening today
          var today = new Date();
          today.setHours(0);
          today.setMinutes(0);
          today.setSeconds(0);
          today.setDate(today.getDate() - 1);
          //update title and text and image
          if (new Date(date) < today) {
            //maybe make separate function that does this and call it in here
            //refer to Nod
            // document.getElementsByClassName("card-title").item .style.opacity = "75%"
            var titleStyle = document.querySelectorAll(".card-title");
            titleStyle.item(i).style.opacity = "60%";
            var tagStyle = document.querySelectorAll(".card-tags");
            tagStyle.item(i).style.opacity = "60%";
            var locationStyle = document.querySelectorAll(".card-location");
            locationStyle.item(i).style.opacity = "60%";
            var imagesStyle = document.querySelectorAll(".card-image");
            imagesStyle.item(i).style.opacity = "60%";
            var dateStyle = document.querySelectorAll(".card-date");
            dateStyle.item(i).style.color = "red";

          }
          i++;
        })
      });
    })

}

function updateFavourites(eventDocID) {
  currentUser.get().then(userDoc => {
    let favourites = userDoc.data().favourites;
    let iconID = 'save-' + eventDocID;
    let isFavourited = favourites.includes(eventDocID);

    if (isFavourited) {
      currentUser.update({
        favourites: firebase.firestore.FieldValue.arrayRemove(eventDocID)

      }).then(() => {
        document.getElementById(iconID).className = 'bi-heart';
      });
    } else {
      currentUser.update({
        favourites: firebase.firestore.FieldValue.arrayUnion(eventDocID)
      }).then(() => {
        document.getElementById(iconID).className = 'bi-heart-fill';
      });
    }
  });
}